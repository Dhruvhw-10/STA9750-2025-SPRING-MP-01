#| echo: false
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(stringr)
library(DT)
library(gt)
library(ggplot2)
library(scales)
payroll_data <- read_csv("data/mp01/nyc_payroll_export.csv")
## \*\* Load and Clean Data\*\*
```{r}
payroll_data <- read_csv("data/mp01/nyc_payroll_export.csv")
if(!file.exists("data/mp01/nyc_payroll_export.csv")){
dir.create("data/mp01", showWarnings=FALSE, recursive=TRUE)
ENDPOINT <- "https://data.cityofnewyork.us/resource/k397-673e.json"
if(!require("httr2")) install.packages("httr2")
library(httr2)
if(!require("jsonlite")) install.packages("jsonlite")
library(jsonlite)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
if(!require("readr")) install.packages("readr")
library(readr)
BATCH_SIZE <- 50000
OFFSET     <- 0
END_OF_EXPORT <- FALSE
ALL_DATA <- list()
while(!END_OF_EXPORT){
cat("Requesting items", OFFSET, "to", BATCH_SIZE + OFFSET, "\n")
req <- request(ENDPOINT) |>
req_url_query(`$limit`  = BATCH_SIZE,
`$offset` = OFFSET)
resp <- req_perform(req)
batch_data <- fromJSON(resp_body_string(resp))
ALL_DATA <- c(ALL_DATA, list(batch_data))
if(NROW(batch_data) != BATCH_SIZE){
END_OF_EXPORT <- TRUE
cat("End of Data Export Reached\n")
} else {
OFFSET <- OFFSET + BATCH_SIZE
}
}
ALL_DATA <- bind_rows(ALL_DATA)
cat("Data export complete:", NROW(ALL_DATA), "rows and", NCOL(ALL_DATA), "columns.")
write_csv(ALL_DATA, "data/mp01/nyc_payroll_export.csv")
}
## \*\* Load and Clean Data\*\*
```{r}
## \*\* Load and Clean Data\*\*
```{r}
packages_needed <- c("readr", "dplyr", "stringr")
install_if_missing <- packages_needed[!(packages_needed %in% installed.packages()[, "Package"])]
if (length(install_if_missing)) {
install.packages(install_if_missing)
}
library(readr)
library(dplyr)
library(stringr)
payroll_data <- read_csv("data/mp01/nyc_payroll_export.csv")
colnames(payroll_data)
payroll_data <- payroll_data %>%
mutate(
agency_name = str_to_title(agency_name),
last_name = str_to_title(last_name),
first_name = str_to_title(first_name),
work_location_borough = str_to_title(work_location_borough),
title_description = str_to_title(title_description),
leave_status_as_of_last_event = str_to_title(leave_status_as_of_last_event)
)
packages_needed <- c("readr", "dplyr", "stringr")
install_if_missing <- packages_needed[!(packages_needed %in% installed.packages()[, "Package"])]
if (length(install_if_missing)) {
install.packages(install_if_missing)
}
library(readr)
library(dplyr)
library(stringr)
library(DT)
library(gt)
library(ggplot2)
library(scales)
payroll_data <- read_csv("data/mp01/nyc_payroll_export.csv")
colnames(payroll_data)
payroll_data <- payroll_data %>%
mutate(
agency_name = str_to_title(agency_name),
last_name = str_to_title(last_name),
first_name = str_to_title(first_name),
work_location_borough = str_to_title(work_location_borough),
title_description = str_to_title(title_description),
leave_status_as_of_last_event = str_to_title(leave_status_as_of_last_event)
)
payroll_data <- payroll_data %>%
mutate(
agency_name = str_to_title(agency_name),
last_name = str_to_title(last_name),
first_name = str_to_title(first_name),
work_location_borough = str_to_title(work_location_borough),
title_description = str_to_title(title_description),
leave_status = str_to_title(leave_status_as_of_june_30)
)
payroll_data <- payroll_data %>%
rename(
fiscal_year = fiscal_year,
agency = agency_name,
last_name = last_name,
first_name = first_name,
title = title_description,
salary = base_salary,
pay_basis = payroll_number,
reg_hours = regular_hours,
ot_hours = ot_hours,
borough = work_location_borough
)
